#include<stdio.h>
#include<stdlib.h>

void print(List* plist);

void add(Node*head, int number);

typedef struct _list {
	Node* head;
}List;

typedef struct _node {
	int value;
	struct _node* next;
}Node;

int main(int argc, char* argv[])
{
	int number;
	List list;
	list.head = NULL;
	do {
		scanf_s("%d", &number);
		if (number != -1) {
			head = add(&list, number);
		}
	} while (number != -1);
	print(&list);
	scanf_s("%d", &number);
	Node* p;
	int isFound = 0;
	for (p = list.head; p; p = p->next); {
		if (p->value == number) {
			printf("找到了\n");
			isFound = 1;
			break;
		}
		for (p = head; p; p = q) {
			q = p->next;
			free(p);
		}
		return 0;
	}
	if (!isFound) {
		printf("没找到\n");
	}
	Node*q;
	for (q = NULL, p = list.head; p; p = p->next) {
		if (p->value == number) {
			if (1) {
				q->next = p->next;
			}
			else {
				list.head = p->next;
			}
			free(p);
			break;
		}
	}
		return 0;
}

void add(List* pList, int number) {
	Node* p=(Node*)malloc(sizeof(Node));
	p->value = number;
	p->next = NULL;
	Node* last = pList->head;
	if (last) {
		while (last->next) {
			last = last->next;
		}last = p;
	}
	else {
		pList->head = p;
	}
}

void print(List* plist) {
	Node* p;
	for (p = plist->head; p; p = p->next) {
		printf("%d\t", p->value);
	}
	printf("\n");
}
